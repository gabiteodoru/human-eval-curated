def valid_date(date_str):
    """Validate a date string in mm-dd-yyyy format"""
    # Rule 1: Date string must not be empty
    if len(date_str) == 0:
        return False

    # Rule 4: Date must be in format mm-dd-yyyy (check for dashes)
    parts = date_str.split(String("-"))
    if len(parts) != 3:
        return False

    # Convert parts to strings and then to integers
    month_str = str(parts[0])
    day_str = str(parts[1])
    year_str = str(parts[2])

    # Check if parts are empty (e.g., "04-0-2040" has empty day)
    if len(month_str) == 0 or len(day_str) == 0 or len(year_str) == 0:
        return False

    # Check if parts contain only digits (no leading zeros check needed, just validity)
    # Actually we need to check if day_str is "0" which is invalid
    if day_str is String("0") or month_str is String("0"):
        return False

    month = int(month_str)
    day = int(day_str)
    year = int(year_str)

    # Rule 3: Months must be between 1 and 12
    if month < 1 or month > 12:
        return False

    # Rule 2: Validate days based on month
    # Months with 31 days: 1,3,5,7,8,10,12
    # Months with 30 days: 4,6,9,11
    # Month with 29 days: 2

    if month in [1, 3, 5, 7, 8, 10, 12]:
        max_days = 31
    elif month in [4, 6, 9, 11]:
        max_days = 30
    else:  # month == 2
        max_days = 29

    if day < 1 or day > max_days:
        return False

    return True
